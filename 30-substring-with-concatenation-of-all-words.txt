class Solution {
public:
    vector<int> findSubstring(string s, vector<string>& words) {
        if(s.empty() || words.empty()) return {};
        vector<int> res;
        int n = words.size(), len = words[0].size();
        unordered_map<string, int> m1;
        for(string word: words) m1[word]++;
        for(int i = 0; i <= (int)s.size() - n * len; i++) {
            unordered_map<string, int> strCnt;
            int j = 0;
            for(j = 0; j < n; j++) {
                string t = s.substr(i + j*len, len);
                if(!m1.count(t)) break;
                strCnt[t]++;
                if(strCnt[t] > m1[t]) break;
            }
            if(j == n) res.push_back(i);
        }
        return res;
    }
};

