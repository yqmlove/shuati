class Solution {
public:
    int scoreOfParentheses(string S) {
        int res = 0;
        stack<int> st;
        for (char c : S) {
            if (c == '(') {
                st.push(res);
                res = 0;
            } else {
                res = st.top() + max(res * 2, 1); 
                st.pop();
            }
        }
        return res;
    }
};

class Solution {
public:
    int scoreOfParentheses(string S) {
        int r = S.size()-1;
        return score(S, 0, r);
    }
    
    int score(string S, int l, int r) {
        if (r-l == 1) return 1;
        int b =0;
        for (int i = l; i< r; i++) {
            if (S[i] == '(') b++;
            if (S[i] == ')') b--;
            if (b ==0) return score(S, l, i) + score (S, i+1, r);
        }
        return 2* score (S, l+1, r-1);
    }
};       
