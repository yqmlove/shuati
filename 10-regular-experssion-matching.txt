class Solution {

public:

    bool isMatch(string s, string p) {
        return helper(s.c_str(),p.c_str());
    }   

    bool helper (const char* s, const char* p)
    {
        if (*p =='\0') return (*s=='\0');
        if (*s!='\0' && (*s ==*p || *p=='.'))
        {
            if (*(p+1) == '*')
            {
                return helper(s,p+2)||helper(s+1,p);
            }
            else 
                return helper(s+1,p+1);
        }      
        return (*(p+1)=='*' && helper(s,p+2));
    }
};

class Solution {
public:
    bool isMatch(string s, string p) {
        if(p.empty()) return s.empty();
        if(p.size() > 1 && p[1] == '*') {
            return isMatch(s, p.substr(2)) || (!s.empty() && (s[0] == p[0] || p[0] == '.') && isMatch(s.substr(1), p));
        }
        else return !s.empty() && (s[0] == p[0] || p[0] == '.') && isMatch(s.substr(1), p.substr(1));
    }
};


